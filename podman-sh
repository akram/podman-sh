#!/bin/bash

set -e

#
# Command Line Options
#

OPTS=`getopt -o dtp: --long no-docker,tag:,port: -n 'parse-options' -- "$@"`

if [ $? != 0 ] ; then
    echo "Failed parsing options." >&2
    exit 1
fi

eval set -- "$OPTS"

# disable mouting local docker socket in container
NO_DOCKER=false
# image name and tag
PODMAN_SH_IMAGE_TAG="otaviof/podman-sh:latest"

while true; do
    case "$1" in
        -d | --no-docker ) NO_DOCKER=true ; shift ;;
        -t | --tag ) PODMAN_SH_IMAGE_TAG="$2" ; shift ; shift ;;
        -- ) shift; break ;;
        * ) break ;;
    esac
done

#
# Global Variables
#

# base directory, where all data will be placed upon
BASE_DIR="${HOME}/.go-dev-sh"
# docker configuration directory
DOCKER_DIR="${HOME}/.docker"
# docker socket
DOCKER_SOCK="/var/run/docker.sock"
# custom GOPATH directory
GOPATH_DIR="${BASE_DIR}/gopath"
# bash directory, to save histfile
BASH_DIR="${BASE_DIR}/bash.d"
# podman storage location
STORAGE_DIR="${BASE_DIR}/.podman/containers/storage"

# current directory name, to be mounted on container
CUR_DIR_NAME="$(basename ${PWD})"

# creating directories to be mounted on container
[ -d "${GOPATH_DIR}" ] || mkdir -v -p "${GOPATH_DIR}"
[ -d "${BASH_DIR}" ] || mkdir -v -p "${BASH_DIR}"
[ -d "${STORAGE_DIR}" ] || mkdir -v -p "${STORAGE_DIR}"
[ -d "${DOCKER_DIR}" ] || mkdir -v -p "${DOCKER_DIR}"

#
# Container Run
#

# using a empty string when docker socket should not be mounted
DOCKER_SOCK_MOUNT="--volume ${DOCKER_SOCK}:${DOCKER_SOCK}"
if [ $NO_DOCKER = true ] ; then
    DOCKER_SOCK_MOUNT=""
fi

cat <<EOS
#
# Podman development container for: '${CUR_DIR_NAME}' at '/src/${CUR_DIR_NAME}'
#
EOS

# checking if contianer name is alredy present, otherwise running a new one
if ( docker ps -a -q -f status=exited -f name="${CUR_DIR_NAME}" |grep -q '.' ) ; then
    echo "# -- reusing existing image '${CUR_DIR_NAME}' --"
    exec docker start "${CUR_DIR_NAME}" \
        --attach \
        --interactive
else
    exec docker run \
        --name="${CUR_DIR_NAME}" \
        --interactive \
        --tty \
        --privileged \
        --security-opt="seccomp:unconfined" \
        --env="HISTFILE=/podman/.bash.d/histfile" \
        --volume="${BASH_DIR}:/podman/.bash.d" \
        --volume="${DOCKER_DIR}:/podman/.docker" \
        $DOCKER_SOCK_MOUNT \
        --volume="${GOPATH_DIR}:/go" \
        --volume="${STORAGE_DIR}:/podman/.local/share/containers/storage" \
        --volume="${PWD}:/src/${CUR_DIR_NAME}" \
        --workdir="/src/${CUR_DIR_NAME}" \
        ${PODMAN_SH_IMAGE_TAG}
fi
